openapi: 3.0.1
info:
  title: API Documentation
  version: 1.0.0
paths:
  /api/products:
    get:
      summary: 상품 목록 조회
      deprecated: false
      description: 모든 상품 목록을 조회합니다
      tags:
      - Product
      parameters: [
        ]
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    x-ouroboros-mock: '{{$number.int(min=1, max=1000)}}'
                    description: 상품 ID
                  name:
                    type: string
                    x-ouroboros-mock: '{{$commerce.productName}}'
                    description: 상품명
                  price:
                    type: number
                    x-ouroboros-mock: '{{$number.decimal(min=1000, max=100000)}}'
                    description: 가격
                x-ouroboros-orders:
                - id
                - name
                - price
                required:
                - id
                - name
                - price
          headers: {
            }
          x-ouroboros-name: OK
      x-ouroboros-status: mock
  /api/users:
    get:
      summary: 사용자 목록 조회
      deprecated: false
      description: 모든 사용자 목록을 조회합니다
      tags:
      - User
      parameters: [
        ]
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    x-ouroboros-mock: '{{$person.fullName}}'
                    description: 이름
                  age:
                    type: integer
                    x-ouroboros-mock: '{{$number.int(min=1, max=100)}}'
                    description: 나이
                x-ouroboros-orders:
                - name
                - age
                required:
                - name
                - age
          headers: {
            }
          x-ouroboros-name: OK
      x-ouroboros-status: mock
  /api/users/profile:
    get:
      summary: 사용자 프로필 조회 (헤더 필요)
      deprecated: false
      description: 인증된 사용자의 프로필을 조회합니다
      tags:
      - User
      parameters:
      - name: Authorization
        in: header
        description: Bearer 토큰
        required: true
        schema:
          type: string
      - name: X-Request-ID
        in: header
        description: 요청 추적 ID
        required: false
        schema:
          type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    x-ouroboros-mock: '{{$number.int(min=1, max=1000)}}'
                    description: 사용자 ID
                  email:
                    type: string
                    x-ouroboros-mock: '{{$internet.email}}'
                    description: 이메일
                  profile:
                    type: object
                x-ouroboros-orders:
                - userId
                - email
                - profile
                required:
                - userId
                - email
          headers: {
            }
          x-ouroboros-name: OK
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    x-ouroboros-mock: Unauthorized
                    description: 오류 코드
                  message:
                    type: string
                    x-ouroboros-mock: '{{$lorem.sentence}}'
                    description: 오류 메시지
                x-ouroboros-orders:
                - error
                - message
                required:
                - error
                - message
          headers: {
            }
          x-ouroboros-name: Unauthorized
      security:
      - bearer: [
          ]
      x-ouroboros-status: mock
  /api/products/{productId}/reviews/{reviewId}:
    get:
      summary: 특정 상품의 특정 리뷰 조회
      deprecated: false
      description: 상품 ID와 리뷰 ID로 리뷰를 조회합니다
      tags:
      - Product
      - Review
      parameters:
      - name: productId
        in: path
        description: 상품 ID
        required: true
        schema:
          type: integer
      - name: reviewId
        in: path
        description: 리뷰 ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviewId:
                    type: integer
                    x-ouroboros-mock: '{{$number.int(min=1, max=10000)}}'
                    description: 리뷰 ID
                  productId:
                    type: integer
                    x-ouroboros-mock: '{{$number.int(min=1, max=1000)}}'
                    description: 상품 ID
                  rating:
                    type: integer
                    x-ouroboros-mock: '{{$number.int(min=1, max=5)}}'
                    description: 평점
                  comment:
                    type: string
                    x-ouroboros-mock: '{{$lorem.paragraph}}'
                    description: 리뷰 내용
                  author:
                    type: string
                    x-ouroboros-mock: '{{$person.fullName}}'
                    description: 작성자
                x-ouroboros-orders:
                - reviewId
                - productId
                - rating
                - comment
                - author
                required:
                - reviewId
                - productId
                - rating
                - comment
                - author
          headers: {
            }
          x-ouroboros-name: OK
        '404':
          description: 리뷰를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    x-ouroboros-mock: Not Found
                    description: 오류 코드
                  message:
                    type: string
                    x-ouroboros-mock: Review not found
                    description: 오류 메시지
                x-ouroboros-orders:
                - error
                - message
                required:
                - error
                - message
          headers: {
            }
          x-ouroboros-name: Not Found
      x-ouroboros-status: mock
  /api/products/search:
    post:
      summary: 상품 검색 (필터링)
      deprecated: false
      description: 다양한 조건으로 상품을 검색합니다
      tags:
      - Product
      parameters:
      - name: page
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: integer
      - name: size
        in: query
        description: 페이지 크기
        required: false
        schema:
          type: integer
      - name: sort
        in: query
        description: 정렬 기준
        required: false
        schema:
          type: string
      responses:
        '200':
          description: 검색 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalCount:
                    type: integer
                    x-ouroboros-mock: '{{$number.int(min=0, max=1000)}}'
                    description: 전체 개수
                  items:
                    type: array
                    description: 상품 목록
                  page:
                    type: integer
                    x-ouroboros-mock: '{{$number.int(min=1, max=10)}}'
                    description: 현재 페이지
                  hasMore:
                    type: boolean
                    x-ouroboros-mock: '{{$bool.bool}}'
                    description: 다음 페이지 존재 여부
                x-ouroboros-orders:
                - totalCount
                - items
                - page
                - hasMore
                required:
                - totalCount
                - items
                - page
                - hasMore
          headers: {
            }
          x-ouroboros-name: OK
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    x-ouroboros-mock: Bad Request
                    description: 오류 코드
                  message:
                    type: string
                    x-ouroboros-mock: '{{$lorem.sentence}}'
                    description: 오류 메시지
                  validationErrors:
                    type: array
                    description: 유효성 검사 오류 목록
                x-ouroboros-orders:
                - error
                - message
                - validationErrors
                required:
                - error
                - message
          headers: {
            }
          x-ouroboros-name: Bad Request
      x-ouroboros-status: mock
components:
  schemas: {
    }
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
servers:
- url: http://127.0.0.1:8080
  description: Local Mock
security: [
  ]
